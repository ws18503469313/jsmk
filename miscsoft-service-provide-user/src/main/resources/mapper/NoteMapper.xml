<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itmuch.mapper.NoteMapper" >
  <resultMap id="BaseResultMap" type="com.itmuch.model.Note" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="categray_id" property="categrayId" jdbcType="CHAR" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="shutdown" property="shutdown" jdbcType="BIT" />
    <result column="like" property="like" jdbcType="INTEGER" />
  </resultMap>
  <!-- 订单及订单明细的resultMap 使用extends继承，不用再重复用户的映射 -->
	<resultMap type="com.itmuch.dto.NoteDTO" id="NoteDetailMap" extends="BaseResultMap">
		<!-- 订单信息 -->
		<!-- 用户信息 -->
		<!-- 使用extends继承，不用在中配置订单信息和用户信息的映射 -->


		<!-- 订单明细信息 一个订单关联查询出了多条明细，要使用collection进行映射 collection：对关联查询到多条记录映射到集合对象中 
			property：将关联查询到多条记录映射到cn.itcast.mybatis.po.Orders哪个属性 ofType：指定映射到list集合属性中pojo的类型 -->
		<collection property="details"
			ofType="com.itmuch.model.NoteDetail">
			<!-- id：订单明细唯 一标识 property:要将订单明细的唯 一标识 映射到cn.itcast.mybatis.po.Orderdetail的哪个属性 -->
			<id column="detail_id" property="id" />
			<result column="detail_content" property="content" />
			<result column="detail_sort" property="sort" />
			<result column="detail_type" property="type"/>
		</collection>


	</resultMap>
  
  <sql id="common">
  	<if test="id!=null and id!=''">
  		AND nt.id = #{id}
  	</if>
  	<if test="name != null and name != ''">
  		AND nt.name like"%"#{name}"%"
  	</if>
  	<if test="categrayId != null and categrayId != ''">
  		AND ca.id = #{categrayId}
  	</if>
  </sql>
  <select id="getNoteDetail" parameterType="com.itmuch.dto.NoteDTO" resultMap="NoteDetailMap" >
  	SELECT nt.id,nt.name,nt.publish_time,nt.like,nt.shutdown,
  	ntd.id detail_id,ntd.content detail_content, ntd.sort detail_sort, ntd.type detail_type 
  	from ss_note nt LEFT JOIN ss_note_detail ntd ON nt.id = ntd.note_id 
  	WHERE nt.is_delete = false 
  	<include refid="common" />
  	ORDER BY ntd.sort
  </select>
  <select id="listNote" parameterType="com.itmuch.dto.NoteDTO" resultType="com.itmuch.dto.NoteDTO">
  	SELECT nt.id,nt.`name`,nt.`like`,nt.publish_time as publishTime,ca.`name` AS categrayName, ca.id AS categrayId 
  	FROM ss_note nt 
  	LEFT JOIN ss_categray ca on nt.categray_id = ca.id 
	WHERE nt.is_delete = false 
	<include refid="common" />
	ORDER BY nt.id
  </select>
</mapper>